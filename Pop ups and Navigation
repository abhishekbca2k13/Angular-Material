Navigation:
Menu:
<mat-menu> is a floating panel containing list of options.
	<button mat-button [matMenuTriggerFor]="menu">Menu</button>
	<mat-menu #menu="matMenu">
 		 <button mat-menu-item>Item 1</button>
 		 <button mat-menu-item>Item 2</button>
	</mat-menu>

By itself, the <mat-menu> element does not render anything. The menu is attached to and opened via application of the matMenuTriggerFor
directive:

Toggling the menu programmatically
The menu exposes an API to open/close programmatically. Please note that in this case, an matMenuTriggerFor directive is still necessary
to attach the menu to a trigger element in the DOM.
Menus support displaying mat-icon elements before the menu item text.

Customizing menu position
By default, the menu will display below (y-axis), after (x-axis), without overlapping its trigger. The position can be changed using
the xPosition (before | after) and yPosition (above | below) attributes. The menu can be forced to overlap the trigger using the 
overlapTrigger attribute.

Sidenav:
Angular Material provides two sets of components designed to add collapsible side content (often navigation, though it can be any 
content) alongside some primary content. These are the sidenav and drawer components.

The sidenav components are designed to add side content to a fullscreen app. To set up a sidenav we use three components: 
<mat-sidenav-container> which acts as a structural container for our content and sidenav, <mat-sidenav-content> which represents
the main content, and <mat-sidenav> which represents the added side content.
	<mat-sidenav-container class="example-container" *ngIf="shouldRun">
 		 <mat-sidenav mode="side" opened>Sidenav content</mat-sidenav>
 		 <mat-sidenav-content>Main content</mat-sidenav-content>
	</mat-sidenav-container>

The drawer component is designed to add side content to a small section of your app. This is accomplished using the 
<mat-drawer-container>, <mat-drawer-content>, and <mat-drawer> components, which are analogous to their sidenav equivalents.
Rather than adding side content to the app as a whole, these are designed to add side content to a small section of your app. 
They support almost all of the same features, but do not support fixed positioning

Toolbar:
<mat-toolbar> is a container for headers, titles, or actions.
	<mat-toolbar>My App</mat-toolbar>

Single row
In the most situations, a toolbar will be placed at the top of your application and will only have a single row that includes the 
title of your application.
	<mat-toolbar>
  		<span>My Application</span>
	</mat-toolbar>

Multiple rows
The Material Design specifications describe that toolbars can also have multiple rows. Creating toolbars with multiple rows in
Angular Material can be done by placing <mat-toolbar-row> elements inside of a <mat-toolbar>.
	<mat-toolbar>  
  		<mat-toolbar-row>
    			<span>First Row</span>
  		</mat-toolbar-row>
  		<mat-toolbar-row>
    			<span>Second Row</span>
 		 </mat-toolbar-row>
	</mat-toolbar>

Note: Placing content outside of a <mat-toolbar-row> when multiple rows are specified is not supported.

Positioning toolbar content
The toolbar does not perform any positioning of its content. This gives the user full power to position the content as it suits their 
application.

A common pattern is to position a title on the left with some actions on the right. This can be easily accomplished with display: flex:
